<?php

namespace ShoppyGo\MarketplaceBundle\Controller;

use Bwlab\Marketplace\Domain\Product\Command\CreateSellerProductCommand;
use PrestaShop\PrestaShop\Adapter\Entity\Product;
use PrestaShopBundle\Controller\Admin\ProductController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

class MarketplaceSellerProductController extends ProductController
{

    /**
     * @var ProductController
     */
    private $productController;

    public function __construct(ProductController $productController)
    {
        parent::__construct();
        $this->productController = $productController;
    }


    /**
     * Product form.
     *
     * @param int $id The product ID
     * @param Request $request
     *
     * @return array|Response Template vars
     *
     * @throws \LogicException
     */
    public function formAction($id, Request $request)
    {
        $seller_id = null;
        $marketplaceCore = $this->get('shoppygo.core');

        if ($marketplaceCore->isEmployeeSeller()) {
            $product = new Product($id);
            if ((int)$product->state !== Product::STATE_TEMP) {
                #
                # il prodotto NON è in fase di creazione
                # Product::STATE_TEMP è lo stato settato da newAction
                #  in questo caso non essendo in fase di creazione devo controllare che appartenga al seller

                if ($marketplaceCore->isOwner($id) === false) {
                    #
                    # se non appartiene al seller redireziono al catalogo
                    #
                    return $this->redirect('admin_product_catalog');
                }
            }
        }

        $parent_response = parent::formAction($id, $request);

        if ($parent_response instanceof JsonResponse) {

            if ($marketplaceCore->isEmployeeSeller()) {
               # @todo da disattivare quanto l'actionAfterCreateProductFormHadler sarà creato
                $this->get('prestashop.core.command_bus')
                    ->handle(new CreateSellerProductCommand($marketplaceCore->getSellerId(), $id));
            }

            return $parent_response;
        }
        return new Response(
            $this->renderView(
                '@PrestaShop/Admin/Product/ProductPage/product.html.twig',
                array_merge($parent_response, ['is_seller' => $marketplaceCore->isEmployeeSeller()])
            )
        );
    }

    public function newAction()
    {
        return parent::newAction(); // TODO: Change the autogenerated stub
    }


}
